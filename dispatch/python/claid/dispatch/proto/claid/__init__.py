# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: layerdata.proto, sensor_data_types.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List

import betterproto


class LayerDataType(betterproto.Enum):
    INT8 = 0
    UINT8 = 1
    INT16 = 2
    UINT16 = 3
    INT32 = 4
    UINT32 = 5
    FLOAT32 = 6


class LayerDataOrder(betterproto.Enum):
    NCHW = 0
    NHWC = 1
    CHW = 2
    HWC = 3
    NW = 4


class AudioEncoding(betterproto.Enum):
    ENCODING_PCM_8BIT = 0
    ENCODING_PCM_16BIT = 1
    ENCODING_PCM_FLOAT = 2
    ENCODING_PCM_24_BIT_PACKED = 3
    ENCODING_PCM_32_BIT = 4


class AudioChannels(betterproto.Enum):
    CHANNEL_MONO = 0
    CHANNEL_STEREO = 1
    CHANNEL_QUAD = 2
    CHANNEL_5POINT1 = 3
    CHANNEL_7POINT1_SURROUND = 4


class BodyLocation(betterproto.Enum):
    left_ankle = 0
    right_ankle = 1
    left_hip = 2
    right_hip = 3
    left_thigh = 4
    right_thigh = 5
    left_thorax = 6
    middle_left_thorax = 7
    left_upper_arm = 8
    right_upper_arm = 9
    left_wrist = 10
    right_wrist = 11


class HeartRateStatus(betterproto.Enum):
    OK = 0
    PAUSED_DUE_TO_OTHER_PPG_SENSOR_RUNNING = 1
    NO_DATA = 2
    PPG_SIGNAL_TOO_WEAK = 3
    MEASUREMENT_UNRELIABLE_DUE_TO_MOVEMENT_OR_WRONG_ATTACHMENT_PPG_WEAK = 4
    OFF_BODY = 5
    INITIALIZING = 6
    HR_STATUS_UNKNOWN = 7


class HeartRateIbiStatus(betterproto.Enum):
    HR_IBI_STATUS_NORMAL = 0
    HR_IBI_STATUS_ERROR = 1
    HR_IBI_STATUS_UNKNOWN = 2


class BatteryState(betterproto.Enum):
    UNKNOWN = 0
    UNPLUGGED = 1
    FULL = 2
    CHARGING = 3
    USB_CHARGING = 4
    AC_CHARGING = 5
    WIRELESS_CHARGING = 6


class SleepStageType(betterproto.Enum):
    STAGE_TYPE_UNKNOWN = 0
    STAGE_TYPE_AWAKE = 1
    STAGE_TYPE_SLEEPING = 2
    STAGE_TYPE_OUT_OF_BED = 3
    STAGE_TYPE_LIGHT_SLEEP = 4
    STAGE_TYPE_DEEP_SLEEP = 5
    STAGE_TYPE_REM_SLEEP = 6
    STAGE_TYPE_AWAKE_IN_BED = 7


@dataclass(eq=False, repr=False)
class LayerDimension(betterproto.Message):
    num_batches: int = betterproto.int32_field(1)
    height: int = betterproto.int32_field(2)
    width: int = betterproto.int32_field(3)
    channels: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class LayerData(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)
    layer_name: str = betterproto.string_field(2)
    layer_dimension: "LayerDimension" = betterproto.message_field(3)
    data_type: "LayerDataType" = betterproto.enum_field(4)
    data_order: "LayerDataOrder" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class LayerDataVector(betterproto.Message):
    layers: List["LayerData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AudioData(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)
    sampling_rate: int = betterproto.int32_field(2)
    bit_rate: int = betterproto.int32_field(3)
    encoding: "AudioEncoding" = betterproto.enum_field(4)
    channels: "AudioChannels" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class Image(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)
    width: int = betterproto.int32_field(2)
    height: int = betterproto.int32_field(3)
    channels: int = betterproto.int32_field(4)
    data_type: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AccelerationUnitValue(betterproto.Message):
    unit: str = betterproto.string_field(1)
    value: float = betterproto.double_field(2)


@dataclass(eq=False, repr=False)
class ActivityName(betterproto.Message):
    type: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AccelerationSample(betterproto.Message):
    """Follows Open mHealth Standard."""

    acceleration_x: float = betterproto.double_field(1)
    acceleration_y: float = betterproto.double_field(2)
    acceleration_z: float = betterproto.double_field(3)
    sensor_body_location: str = betterproto.string_field(4)
    unix_timestamp_in_ms: int = betterproto.uint64_field(5)
    effective_time_frame: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class AccelerationData(betterproto.Message):
    samples: List["AccelerationSample"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GyroscopeSample(betterproto.Message):
    gyroscope_x: float = betterproto.double_field(1)
    gyroscope_y: float = betterproto.double_field(2)
    gyroscope_z: float = betterproto.double_field(3)
    sensor_body_location: str = betterproto.string_field(4)
    unix_timestamp_in_ms: int = betterproto.uint64_field(5)
    effective_time_frame: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class GyroscopeData(betterproto.Message):
    samples: List["GyroscopeSample"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HeartRateSample(betterproto.Message):
    hr: float = betterproto.double_field(1)
    hr_inter_beat_interval: int = betterproto.int32_field(2)
    status: "HeartRateStatus" = betterproto.enum_field(3)
    ibi_list: List[int] = betterproto.int32_field(4)
    ibi_status_list: List["HeartRateIbiStatus"] = betterproto.enum_field(5)
    unix_timestamp_in_ms: int = betterproto.uint64_field(6)
    effective_time_frame: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class HeartRateData(betterproto.Message):
    samples: List["HeartRateSample"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BatterySample(betterproto.Message):
    level: int = betterproto.int32_field(1)
    """Battery level represented as a 16-bit signed integer"""

    state: "BatteryState" = betterproto.enum_field(2)
    """Battery state represented using the BatteryState enum"""

    unix_timestamp_in_ms: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class BatteryData(betterproto.Message):
    samples: List["BatterySample"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LocationSample(betterproto.Message):
    provider: str = betterproto.string_field(1)
    floor: int = betterproto.int32_field(2)
    timestamp: int = betterproto.int64_field(3)
    h_accuracy: float = betterproto.double_field(4)
    v_accuracy: float = betterproto.double_field(5)
    speed: float = betterproto.double_field(6)
    altitude: float = betterproto.double_field(7)
    latitude: float = betterproto.double_field(8)
    longitude: float = betterproto.double_field(9)
    elapsed_realtime_seconds: float = betterproto.double_field(10)
    bearing: float = betterproto.double_field(11)


@dataclass(eq=False, repr=False)
class LocationData(betterproto.Message):
    samples: List["LocationSample"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SleepStage(betterproto.Message):
    """Sleep data extracted using health connect API"""

    sleep_stage_type: "SleepStageType" = betterproto.enum_field(1)
    start_time_unix_timestamp: int = betterproto.int64_field(2)
    end_time_unix_timestamp: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class SleepData(betterproto.Message):
    begin_of_sleep_data_interval_unix_timestamp_ms: int = betterproto.int64_field(1)
    end_of_sleep_data_interval_unix_timestamp_ms: int = betterproto.int64_field(2)
    stages: List["SleepStage"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class OxygenSaturationSample(betterproto.Message):
    oxygen_saturation_percentage: float = betterproto.double_field(1)
    unix_timestamp_ms: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class OxygenSaturationData(betterproto.Message):
    oxygen_saturation_samples: List["OxygenSaturationSample"] = (
        betterproto.message_field(3)
    )


@dataclass(eq=False, repr=False)
class GreenPpgSample(betterproto.Message):
    ppg_green_value: int = betterproto.int32_field(1)
    unix_timestamp_in_ms: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class GreenPpgData(betterproto.Message):
    green_ppg_samples: List["GreenPpgSample"] = betterproto.message_field(1)
