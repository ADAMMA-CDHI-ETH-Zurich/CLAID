package(default_visibility = ["//visibility:public"])



cc_binary(
    name = "claid_capi",
    linkshared = True,
    srcs = [
        ":capi",
    ],
    deps = [
        ":capi",
    ],
)


cc_library(
    name="cpp_modules",
    srcs = glob([
        "Module/TypeMapping/*.hh",
        "Traits/*.hh",
    
    ]),
    hdrs = glob(["Traits/*.hh",
    
    ]),
    deps = [
        ":capi",
        ":proto_util"
    ],
)


cc_library(
    name = "capi",
    srcs = [
        "capi.cc",
        "middleware.cc",
    ],
    hdrs = [
        "capi.h",
        "middleware.hh",
    ],
    deps = [
        ":CLAID",
    ],
    linkstatic = True,   # only create a static lib
    alwayslink = True,   # include everything in dependents
)

cc_binary(
    name = "claid_test",
    srcs = [
        "claid_main.cc",
        "claid_main.hh",
    ],
    deps = [
        ":CLAID",
    ],
)

cc_library(
    name = "CLAID",
    srcs = [
        "CLAID.cc",
    ] + glob([
        "Router/*.cc",
        "Exception/*.cc",
        "ExceptionHandler/*.cc",
        "RemoteDispatching/*.cc",
    ]),
    hdrs = [
        "CLAID.hh",
    ] + glob([
        "Router/*.hh",
        "Exception/*.hh",
        "ExceptionHandler/*.hh",
    ]),
    deps = [
        ":claid_config",
        ":local_dispatching",
        ":logger",
        ":proto_util",
        ":remote_dispatching",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "local_dispatching",
    srcs = [
        "local_dispatching.cc",
    ],
    hdrs = [
        "shared_queue.hh",
        "local_dispatching.hh",
    ],
    deps = [
        ":module_table",
        ":logger",
        ":proto_util",
        "@com_github_grpc_grpc//:grpc++",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc",
    ],
)

cc_library(
    name = "remote_dispatching",
    srcs = glob([
        "RemoteDispatching/*.cc",
    ]),
    hdrs = glob([
        "RemoteDispatching/*.hh",
        ] + [
        "shared_queue.hh",
    ]),
    deps = [
        "@com_github_grpc_grpc//:grpc++",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc",
    ],
)

cc_library(
    name = "routing",
    srcs = glob([
            "Router/*.cc",
        ] +  [
            "RemoteDispatching/HostUserTable.cc",
        ]),
    hdrs = glob([
        "Router/*.hh",
        ] + [
        "RemoteDispatching/HostUserTable.hh",
        "RemoteDispatching/RemoteClientKey.hh",
    ]),
    deps = [
        ":claid_config",
        ":logger",
        ":module_table",
        ":proto_util",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc",
    ],
)


cc_library(
    name = "claid_config",
    srcs = glob(["Configuration/*.cc"]),
    hdrs = glob(["Configuration/*.hh"]),
    deps = [
        "//dispatch/proto:claidservice_cc_proto",
        "@com_google_protobuf//:protobuf",
        ":logger",
    ],
)

cc_library(
    name = "module_table",
    srcs = [
        "module_table.cc",
        "shared_queue.hh",
    ],
    hdrs = ["module_table.hh"],
    deps = [
        ":logger",
        ":proto_util",
        "@com_github_grpc_grpc//:grpc++",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc",
    ],
)

cc_library(
    name = "logger",
    srcs = glob(["Logger/*.cc"]),
    hdrs = glob(["Logger/*.hh"]),
)

cc_library(
    name = "proto_util",
    srcs = ["proto_util.cc"],
    hdrs = ["proto_util.hh"],
    deps = [
        "@com_google_protobuf//:protobuf",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc"
    ],
    # linkstatic = True,   # only create a static lib
    # alwayslink = True,   # include everything in dependents
)
