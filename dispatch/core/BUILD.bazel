
package(default_visibility = ["//visibility:public"])

cc_binary(
    name = "claid_capi",
    linkshared = True,
    srcs = [
        ":capi",
    ],
)

cc_library(
    name = "capi",
    srcs = [
        "capi.cc",
        "middleware.cc",
    ],
    hdrs = [
        "capi.h",
        "middleware.hh",
    ],
    deps = [
        ":CLAID",
    ],
    linkstatic = True,   # only create a static lib
    alwayslink = True,   # include everything in dependents
)

cc_binary(
    name = "claid_test",
    srcs = [
        "claid_main.cc",
        "claid_main.hh",
    ],
    deps = [
        ":CLAID",
        # ":claid_config",
        # ":local_dispatching",
        # "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "CLAID",
    srcs = [
        "CLAID.cc",
    ] + glob([
        "Router/*.cc",
        "Logger/*.cc",
        "Exception/*.cc",
        "ExceptionHandler/*.cc",
    ]),
    hdrs = [
        "CLAID.hh",
    ] + glob([
        "Router/*.hh",
        "Logger/*.hh",
        "Exception/*.hh",
        "ExceptionHandler/*.hh",
    ]),
    deps = [
        ":claid_config",
        ":local_dispatching",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "local_dispatching",
    srcs = [
        "module_table.cc",
        "local_dispatching.cc",
    ],
    hdrs = [
        "shared_queue.hh",
        "module_table.hh",
        "local_dispatching.hh",
    ],
    deps = [
        "@com_github_grpc_grpc//:grpc++",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc",
    ],
)

cc_library(
    name = "routing",
    srcs = glob(["Router/*.cc", "Logger/*.cc", "module_table.cc"]),
    hdrs = glob(["Router/*.hh", "Logger/*.hh", "shared_queue.hh",
        "module_table.hh",]),
    deps = [
        "//dispatch/core:claid_config",
        "//dispatch/proto:claidservice_cc_proto",
        "//dispatch/proto:claidservice_cc_grpc",
    ],
)


cc_library(
    name = "claid_config",
    srcs = glob(["Configuration/*.cc"]),
    hdrs = glob(["Configuration/*.hh"]),
    deps = [
        "//dispatch/proto:claidservice_cc_proto",
        "@com_google_protobuf//:protobuf",
    ],
)

# cc_library(
#     name = "module_table",
#     srcs = [
#         "module_table.cc",
#     ],
#     hdrs = [
#         "shared_queue.hh",
#         "module_table.hh",
#     ],
#     deps = [
#         "@com_github_grpc_grpc//:grpc++",
#         "//dispatch/proto:claidservice_cc_proto",
#         "//dispatch/proto:claidservice_cc_grpc",
#     ],
# )

<<<<<<< HEAD

=======
cc_library(
    name = "claid_config",
    srcs = glob(["Configuration/*.cc"]),
    hdrs = glob(["Configuration/*.hh"]),
    deps = [
        "//dispatch/proto:claidservice_cc_proto",
        "@com_google_protobuf//:protobuf",
    ],
)
>>>>>>> refs/remotes/origin/main
