syntax = "proto3";
package claidservice;

import "dispatch/proto/runtime.proto";

enum LogMessageSeverityLevel
{
  DEBUG_LOG = 0;
  INFO = 1;
  WARNING = 2;
  ERROR = 3;
  FATAL = 4;
}

enum LogMessageEntityType
{
  MIDDLEWARE = 0; // For general messages, i.e., sent from low level middleware functions
  MIDDLEWARE_COMPONENT = 1; // For messages from certain well-defined components within the middleware, e.g., the Router oder RemoteDispatcher
  MODULE = 2; // For log messages directly sent from a certain Module
}

message LogMessage
{
  string log_message = 1;
  LogMessageSeverityLevel severity_level = 2;
  uint64 unix_timestamp_in_ms = 3;
  LogMessageEntityType entity_type = 4;
  string entity_name = 5;
  Runtime runtime = 6; // Runtime from which the message was sent
}


// Determines how log messages shall be transfered to the log sink host
// STORE_AND_UPLOAD is the default option. Log messages will be written to files (one file per hour),
// which will be synchronized with the log sync host once it is available.
// STREAM is an option that can be used if hosts shall livestream their log messages to the log sink host.
// This allows to stream the logs in realtime to the log sink host, however log messages will get lost if there currently is no connection to the log sink host
enum LogSinkTransferMode
{
  STORE_AND_UPLOAD = 0;
  STREAM = 1;
}