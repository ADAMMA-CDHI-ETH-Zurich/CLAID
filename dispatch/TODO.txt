Middleware Components

Composition: ClaidMiddleware owns
            * Router owns
                * Dispatcher (unix socket)
                * In ClientMode:
                        + DispatcherClient
                * In ServerMode:
                        + Dispatche(tcp) connected to Claid in ServerMode

* ClaidMiddleware:
        - container for running the middleware this is created 
          through the C-ABI.

* Router: 
        - routes between modules (both local and global)
          maintains a mapping of module_id --> dispatcher

* DispatcherServer ({unix socket|tcp} server mode) implements Dispatcher interface
        - send/receive packages to/from modules (== DispatcherClient) 
        - keeps stats about each module 
        - restarts grpc-server if it crashes

* DispatcherClient ({unix socket|tcp} client mode) implements Dispatcher interface
        - Send/receive packages to dispatcher

* Dispatcher interface (abstraction of client & server)
        - list of modules it is connected to
        - send to module 

Local dispatcher algorithm:
    - Listens to a specific unix socket
    - Has list of modules and is 'ready' when all modules have 
      connected
    - Updates basic stats about modules as messages come in
    - Verifies that the 'src' field of module package is consistently 
      the same
    - Verifies that the payload type coming in is consistently the same. 
    - Verifies the user token
    - Every module connects
        - Sends a ping message 
        - Waits for a ready message 
        - Sends

C API (for embedding):
    - start_claid(unix_socket_path, module_config, user_token)
            --> opaque_pointer
    - stop_claid(opaque_pointer)

Middleware Topology
    - Tree
    - Root: CLAID server that is not a client of another root server.
    - Modules are the leafes.

Module Topology: DAG == Logical topology on top of middleware and 
      implemented by router



Milestones:
===========

* M1: Implement Dispatcher (C++) 


* Implement server component based on unix domain socket 
* Implment client 
* Write test that tests claid server 
    - add status method 
    - logging methods 
