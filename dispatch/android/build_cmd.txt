bazel build :app --copt=-std=c++17 --fat_apk_cpu=armeabi-v7a --android_crosstool_top=@androidndk//:toolchain --features=exceptions --copt="-fexceptions"

// the bazel target is called "lib", but adding .aar builds the implicit output target lib.aar
bazel build :claid_android --copt=-std=c++17 --fat_apk_cpu=armeabi-v7a --android_crosstool_top=@androidndk//:toolchain


https://github.com/bazelbuild/bazel/issues/3924




build apk:



build shared lib for a certain platform only: 

bazel build :claid_android_lib \
      --crosstool_top=@androidndk//:toolchain \
      --cpu=arm64-v8a \
      --host_crosstool_top=@androidndk//:toolchain --copt="-Wno-error" --copt="-fexceptions"



bazel build :claid_android_lib --crosstool_top=//external:android/crosstool --cpu=arm64-v8a --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt="-std=c++17"




bazel build --crosstool_top=@androidndk//:toolchain --host_crosstool_top=@bazel_tools//tools/cpp:toolchain --cxxopt=-std=c++17 --cpu=arm64-v8a --fat_apk_cpu=arm64-v8a --distinct_host_configuration=true :claid_android_lib --copt="-fexceptions" --copt="-Wno-error"